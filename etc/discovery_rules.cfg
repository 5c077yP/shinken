##### Here are some examples for tagging hosts with classic templates

# The generic-host should be AT THE END, because templates are built from more specific to
# generic
define discoveryrule {
       discoveryrule_name   HostGeneric
       creation_type        host
       # Generic host should be the last template use, so we give it the
       # last order
       discoveryrule_order  999

       isup                 1
       +use                 generic-host
}



# Example for service creation.
# Obviously the 77777 port is not valid :)
# This shows how to create a service with a rule

define discoveryrule {
       discoveryrule_name       Sample-Service
       openports                ^77777$
       check_command            check_dummy
       service_description      Sample-Service
       use                      generic-service
}

#################################################################
# Unix Filesystem discovery rules
#################################################################
define discoveryrule {
        discoveryrule_name     fs_root
        creation_type          host
        fs_name                ^_root$
        +use                   fs_root
}

define discoveryrule {
        discoveryrule_name     fs_var
        creation_type          host
        fs_name                var$
        +use                   fs_var
}

define discoveryrule {
        discoveryrule_name     fs_usr
        creation_type          host
        fs_name                usr$
        +use                   fs_usr
}

define discoveryrule {
        discoveryrule_name     fs_opt
        creation_type          host
        fs_name                opt$
        +use                   fs_opt
}

define discoveryrule {
        discoveryrule_name     fs_home
        creation_type          host
        fs_name                home$
        +use                   fs_home
}

define discoveryrule {
        discoveryrule_name     fs_tmp
        creation_type          host
        fs_name                tmp$
        +use                   fs_tmp
}
