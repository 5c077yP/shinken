#Template

define command{
	command_name	check_local_disk
	command_line	/home/nap/check.sh $HOSTADDRESS$ -c $ARG1$ SERVICE
}

define command{
	command_name	check_http
	command_line	/home/nap/check.sh $HOSTADDRESS$ -c $ARG1$ SERVICE
}

define command{
	command_name	check-host-alive
	command_line	/home/nap/check.sh $HOSTADDRESS$ -c $ARG1$ HOST
}


define command{
	command_name	notify-service-by-email
	command_line	/home/nap/check.sh $NOTIFICATIONTYPE$ : $SERVICEDESC$ is $SERVICESTATE$ ouput = $SERVICEOUTPUT$ contact: $CONTACTEMAIL$ $LONGDATETIME$
}

define command{
	command_name	notify-host-by-email
	command_line	/home/nap/check.sh $NOTIFICATIONTYPE$ : $HOSTNAME$ at $HOSTADDRESS$ is $HOSTSTATE$ output : $HOSTOUTPUT$ contact: $CONTACTEMAIL$ $LONGDATETIME$
}

define contact{
        name                            generic-contact    	; The name of this contact template
        service_notification_period     24x7			; service notifications can be sent anytime
        host_notification_period        24x7			; host notifications can be sent anytime
#        service_notification_options    w,u,c,r,f,s		; send notifications for all service states, flapping events, and scheduled downtime events
        service_notification_options    c,w
        host_notification_options       d,u,r,f,s		; send notifications for all host states, flapping events, and scheduled downtime events
        service_notification_commands   notify-service-by-email!33	; send service notifications via email
        host_notification_commands      notify-host-by-email	; send host notifications via email
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL CONTACT, JUST A TEMPLATE!
	host_notifications_enabled	1
	service_notifications_enabled	1
	contactgroups			AdminLectra
	_SNMPPASS			password
	host_notification_period		workhours
	service_notification_period		24x7
	email					jean@serveur.home
	}


define contact{
        contact_name                            superadmin
	use generic-contact
	contactgroups			supergroup
        }

define contact{
        contact_name                            dbrosseau
	use generic-contact
	contactgroups			+GroupeADavid
	_Superpropriete			PROPRIETEDELAMORT
	_SNMPPASS			+SECRETADAVID
	_supertoto			+prout
}



define contactgroup{
	contactgroup_name	autreadmins
	alias	alias
	members	dbrosseau
	contactgroup_members	contactgroups
   	}

define contactgroup{
	contactgroup_name	admins
	alias	admins
	members	superadmin
	contactgroup_members	autreadmins
   	}



###############################################################################
###############################################################################
#
# HOST TEMPLATES
#
###############################################################################
###############################################################################

# Generic host definition template - This is NOT a real host, just a template!

define host{
        name                            generic-host    ; The name of this host template
        notifications_enabled           1       	; Host notifications are enabled
        event_handler_enabled           1       	; Host event handler is enabled
        flap_detection_enabled          1       	; Flap detection is enabled
        failure_prediction_enabled      1       	; Failure prediction is enabled
        process_perf_data               1       	; Process performance data
        retain_status_information       1       	; Retain status information across program restarts
        retain_nonstatus_information    1       	; Retain non-status information across program restarts
	notification_period		24x7		; Send host notifications at any time
        register                        0       	; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
	_dellsuck			Yes!
        }


# Linux host definition template - This is NOT a real host, just a template!

define host{
	name				linux-server	; The name of this host template
	use				generic-host	; This template inherits other values from the generic-host template
	check_period			24x7		; By default, Linux hosts are checked round the clock
	check_interval			5		; Actively check the host every 5 minutes
	retry_interval			1		; Schedule host check retries at 1 minute intervals
	max_check_attempts		2		; Check each Linux host 10 times (max)
        check_command           	check-host-alive ; Default command to check Linux hosts
	notification_period		24x7
							; Note that the notification_period variable is being overridden from
							; the value that is inherited from the generic-host template!
	notification_interval		120		; Resend notifications every 2 hours
	notification_options		d,u,r		; Only send notifications for specific host states
	contact_groups			admins		; Notifications get sent to the admins by default
	register			0		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
	hostgroups		ServeursRedHat
	_dellsuck		+butdontsay them
	}



# Windows host definition template - This is NOT a real host, just a template!

define host{
	name			windows-server	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, Windows servers are monitored round the clock
	check_interval		5		; Actively check the server every 5 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	2		; Check each server 10 times (max)
	check_command		check-host-alive	; Default command to check if servers are "alive"
	notification_period	24x7		; Send notification out at any time - day or night
	notification_interval	30		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	hostgroups		windows-servers ; Host groups that Windows servers should be a member of
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
	}


# We define a generic printer template that can be used for most printers we monitor

define host{
	name			generic-printer	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, printers are monitored round the clock
	check_interval		5		; Actively check the printer every 5 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	2		; Check each printer 10 times (max)
	check_command		check-host-alive	; Default command to check if printers are "alive"
	notification_period	workhours		; Printers are only used during the workday
	notification_interval	30		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
	}


# Define a template for switches that we can reuse
define host{
	name			generic-switch	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, switches are monitored round the clock
	check_interval		5		; Switches are checked every 5 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	10		; Check each switch 10 times (max)
	check_command		check-host-alive	; Default command to check if routers are "alive"
	notification_period	24x7		; Send notifications at any time
	notification_interval	30		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
	}




###############################################################################
###############################################################################
#
# SERVICE TEMPLATES
#
###############################################################################
###############################################################################

# Generic service definition template - This is NOT a real service, just a template!

define service{
        name                            generic-service 	; The 'name' of this service template
        active_checks_enabled           1       		; Active service checks are enabled
        passive_checks_enabled          1    		   	; Passive service checks are enabled/accepted
        parallelize_check               1       		; Active service checks should be parallelized (disabling this can lead to major performance problems)
        obsess_over_service             1       		; We should obsess over this service (if necessary)
        check_freshness                 1       		; Default is to NOT check service 'freshness'
	freshness_threshold		30
        notifications_enabled           1       		; Service notifications are enabled
        event_handler_enabled           1       		; Service event handler is enabled
        flap_detection_enabled          1       		; Flap detection is enabled
        failure_prediction_enabled      1       		; Failure prediction is enabled
        process_perf_data               1       		; Process performance data
        retain_status_information       1       		; Retain status information across program restarts
        retain_nonstatus_information    1       		; Retain non-status information across program restarts
        is_volatile                     0       		; The service is not volatile
        check_period                    24x7			; The service can be checked at any time of the day
        max_check_attempts              2			; Re-check the service up to 3 times in order to determine its final (hard) state
        check_interval           5			; Check the service every 10 minutes under normal conditions
        retry_check_interval            2			; Re-check the service every two minutes until a hard state can be determined
        contact_groups                  admins			; Notifications get sent out to everyone in the 'admins' group
	notification_options		w,u,c,r			; Send notifications about warning, unknown, critical, and recovery events
        notification_interval           60			; Re-notify about service problems every hour
	notification_period             24x7
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
	retry_interval	2
	_httpstink			 NO
        }



define service{
	name				local-service 		; The name of this service template
	use				generic-service		; Inherit default values from the generic-service definition
        max_check_attempts              1			; Re-check the service up to 4 times in order to determine its final (hard) state
        normal_check_interval           1			; Check the service every 5 minutes under normal conditions
        retry_check_interval            1			; Re-check the service every minute until a hard state can be determined
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
#	hostgroup_name			in-existant
#	servicegroups			UberService
	}


# Define a host for the local machine

define host{
        use                     linux-server
        host_name               localhost
        alias                   localhost
        address                 localhost
	check_interval		9999	
	parents			dc01
        }

define host{
        use                     windows-server
        host_name               dc01
        alias                   dc01
        address                 dc01
#	hostgroups		DCserveurs
        }


define host{
        use                     windows-server
        host_name               dc02
        alias                   dc02
        address                 dc02
	check_interval		9999	
        }

define host{
        use                     windows-server
        host_name               dc03
        alias                   dc03
        address                 dc03
	check_interval		9999	
	parents			dc02
        }

define host{
        use                     windows-server
        host_name               dc05
        alias                   dc05
        address                 dc05
	check_interval		9999	
	parents			dc03
        }

define host{
        use                     windows-server
        host_name               dc04
        alias                   dc04
        address                 dc04
	check_interval		9999	
	parents			dc03
        }


define host{
        use                     windows-server
        host_name               dc07
        alias                   dc07
        address                 dc07
	check_interval		9999	
        }


#define host{
#        use                     linux-server            ; Name of host template to use
#                                                        ; This host definition will inherit all variables that are defined
#                                                        ; in (or inherited by) the linux-server host template definition.
#        host_name               srv-1
#        alias                   srv-1
#        address                 srv-1
#	hostgroups		in-existant
#	parents			localhost
#        }

#define host{
#        use                     linux-server
#        host_name               srv-2
#        alias                   srv-2
#        address                 srv-2
#	hostgroups		in-existant
#        }

#define host{
#        use                     linux-server
##        host_name               srv-3
#        alias                   srv-3
#        address                 srv-3
#	hostgroups		+MADONAAAAAAAAA
#	_mavariable		madonne
#        }

#define host{
#        use                     linux-server
#        host_name               srv-4
#        alias                   srv-4
#        address                 srv-4
#	hostgroups		in-existant
#	_dellsuck		+caseraitrigolo
#        }


#define host{
#        use                     linux-server
#        host_name               srv-5
#        alias                   srv-5
#        address                 srv-5
#	hostgroups		in-existant
#	_dellsuck		ImnotOK
#        }



define hostgroup{
        hostgroup_name  linux-servers ; The name of the hostgroup
        alias           Linux Servers ; Long name of the group
        members         srv-1     ; Comma separated list of hosts that belong to this group
        }

define hostgroup{
        hostgroup_name  in-existant
        alias           in-existant
        members         tortuegeniale
	hostgroup_members	linux-servers,DCserveurs
        }



# Define a service to "ping" the local machine
#
#define service{
#        use                             local-service         ; Name of service template to use
#        host_name                       localhost
#        service_description             PING
#	check_command			check_local_disk!100.0,20%!500.0,60%
#	register 0
#	
#        }

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
	hostgroup_name			linux-servers
        service_description             Root Partition
	check_command			check_local_disk!1
        }


define service{
        use                             local-service         ; Name of service template to use
        host_name                       dc01
        service_description             ActiveDirectory
	check_command			check_local_disk!Europe
        }


#define service{
#        use                             local-service         ; Name of service template to use
#        host_name                       +additivehost
#        service_description             ADDITIVENAME
#	check_command			check_local_disk!20!50
#	_mavariable			Super!
#        }

#define service{
#        use                             local-service         ; Name of service template to use
#        host_name                       localhost,superserveur
#        service_description             Total Processes
#	check_command			check_local_disk!250!400!RSZDT
#        }


#define service{
#        use                             local-service         ; Name of service template to use
#        host_name                       localhost
#        service_description             Current Load
#	check_command			check_local_disk!5.0,4.0,3.0!10.0,6.0,4.0
#        }


#define service{
#        use                             local-service         ; Name of service template to use
#        host_name                       localhost
#        service_description             Swap Usage
#	check_command			check_local_disk!20!10
#        }

#define service{
#        use                             local-service         ; Name of service template to use
#        host_name                       localhost
#        service_description             SSH
#	check_command			check_local_disk
#	notifications_enabled		0
#        }



#define service{
#        use                             local-service         ; Name of service template to use
#        host_name                       localhost
#        service_description             HTTP
#	check_command			check_local_disk
#	notifications_enabled		0
#	_httpstink			yesindead
#        }


define servicegroup{
       servicegroup_name	dbservices
       alias					Database Services
       members							ms1,SQL Server,ms1,SQL Server Agent,ms1,SQL DTC
       servicegroup_members					toto
       }

define servicegroup{
       servicegroup_name        toto
       alias                                    toto
       members                                                  SUPERMANESTDSLAPLACE,mesfesses
#       servicegroup_members                                     toto
       }


#define service{
#        use                             generic-service
#        host_name                       SUPERMANESTDSLAPLACE
#        service_description             mesfesses
#        check_command                   check_local_disk
#        notifications_enabled           0
}


# This defines a timeperiod where all times are valid for checks, 
# notifications, etc.  The classic "24x7" support nightmare. :-)
define timeperiod{
        timeperiod_name 24x7
        alias           24 Hours A Day, 7 Days A Week
        sunday          00:00-24:00
        monday          00:00-24:00
        tuesday         00:00-24:00
        wednesday       00:00-24:00
        thursday        00:00-24:00
        friday          00:00-24:00
        saturday        00:00-24:00
	wednesday 1 january - thursday 2 july 00:00-24:00
        }


# 'workhours' timeperiod definition
define timeperiod{
	timeperiod_name	workhours
	alias		Normal Work Hours
	monday		09:00-17:00
	tuesday		09:00-17:00
	wednesday	09:00-17:00
	thursday	09:00-17:00
	friday		09:00-17:00
	#exclude		us-holidays
	}


# 'none' timeperiod definition
define timeperiod{
	timeperiod_name	none
	alias		No Time Is A Good Time
	}


# Some U.S. holidays
# Note: The timeranges for each holiday are meant to *exclude* the holidays from being
# treated as a valid time for notifications, etc.  You probably don't want your pager 
# going off on New Year's.  Although you're employer might... :-)
define timeperiod{
	name			us-holidays
        timeperiod_name         us-holidays
        alias                   U.S. Holidays

        january 1               00:00-00:00     ; New Years
        monday -1 may           00:00-00:00     ; Memorial Day (last Monday in May)
        july 4                  00:00-00:00     ; Independence Day
        monday 1 september      00:00-00:00     ; Labor Day (first Monday in September)
        thursday -1 november    00:00-00:00     ; Thanksgiving (last Thursday in November)
        december 25             00:00-00:00     ; Christmas
        }


# This defines a modified "24x7" timeperiod that covers every day of the
# year, except for U.S. holidays (defined in the timeperiod above).
define timeperiod{
        timeperiod_name 24x7_sans_holidays
        alias           24x7 Sans Holidays

	use		us-holidays		; Get holiday exceptions from other timeperiod

        sunday          00:00-24:00
        monday          00:00-24:00
        tuesday         00:00-24:00
        wednesday       00:00-24:00
        thursday        00:00-24:00
        friday          00:00-24:00
        saturday        00:00-24:00
        }

define servicedependency{
       host_name			dc01
       service_description		     ActiveDirectory
       dependent_host_name		     	     localhost
       dependent_service_description		     Root Partition
       execution_failure_criteria		     o
       notification_failure_criteria		     w,u
       dependency_period			     24x7
       }

define hostdependency{
       host_name                        dc01
       dependent_host_name                           localhost
       execution_failure_criteria                    o
       notification_failure_criteria                 w,u
       dependency_period                             24x7
       }


define scheduler{
       name	scheduler-main
       address	localhost
       port	7768
       spare	0
       }


define scheduler{
       name	stestnag2
       address	scheduler-2
       port	7771
       spare	0
       }



define scheduler{
       name	scheduler-slave
       address	localhost
       port	9999
       spare	1
       }

define actionner{
       name	actionner-1
       scheduler_name	scheduler-main
       address	localhost
       port	9999
       spare	1
       }

define poller{
       name     poller-1
       scheduler_name   scheduler-main
       address  localhost
       port     9999
}