#Template and commons things in this file


#First : commands

#Pollertag is a advanced features for mix architectures. Look at teh doc for it.
define command{
	command_name	check_host
	command_line	/usr/local/shinken/src/libexec/check.sh $HOSTADDRESS$ -c $ARG1$ HOST $USER1$
	#poller_tag	DMZ
}

define command{
	command_name	check_local_disk
	command_line	/usr/local/shinken/src/libexec/check.sh $HOSTADDRESS$ -c $ARG1$ SERVICE $USER1$
}

define command{
	command_name	super_event_kill_everyone
	command_line	/usr/local/shinken/src/libexec/check.sh $HOSTADDRESS$ -c $ARG1$ SERVICE $_HOSTDELLSUCK$
}

define command{
	command_name	check_http
	command_line	/usr/local/shinken/src/libexec/check.sh $HOSTADDRESS$ -c $ARG1$ SERVICE $_HOSTDELLSUCK$
}

define command{
	command_name	check-host-alive
	command_line	/usr/local/shinken/src/libexec/check.sh $HOSTADDRESS$ -c $ARG1$ HOST $_HOSTDELLSUCK$ $SERVICEDESC:srv-1:Service-2$ $SERVICEDESC::Service-30$ $HOSTADDRESS:$  $HOSTGROUPALIAS:linux-servers$
}


#Now notify commands. To notify :)
define command{
	command_name	notify-service-by-email
	command_line	/usr/local/shinken/src/libexec/notify.sh $NOTIFICATIONTYPE$ : $SERVICEDESC$ is $SERVICESTATE$ ouput = $SERVICEOUTPUT$ contact: $CONTACTEMAIL$ $LONGDATETIME$
}

define command{
	command_name	notify-host-by-email
	command_line	/usr/local/shinken/src/libexec/notify.sh $NOTIFICATIONTYPE$ : $HOSTNAME$ at $HOSTADDRESS$ is $HOSTSTATE$ output : $HOSTOUTPUT$ contact: $CONTACTEMAIL$ $LONGDATETIME$
}


####Contact definition
define contact{
        name                            generic-contact    	; The name of this contact template
        service_notification_period     24x7			; service notifications can be sent anytime
        host_notification_period        24x7			; host notifications can be sent anytime
        service_notification_options    c,w,r
        host_notification_options       d,u,r,f,s		; send notifications for all host states, flapping events, and scheduled downtime events
        service_notification_commands   notify-service-by-email!33	; send service notifications via email
        host_notification_commands      notify-host-by-email	; send host notifications via email
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL CONTACT, JUST A TEMPLATE!
	host_notifications_enabled	1
	service_notifications_enabled	1
	contactgroups			AdminLectra
	_SNMPPASS			password
	host_notification_period		24x7
	service_notification_period		24x7
	email					jean@serveur.home
	}


define contact{
        contact_name                            superadmin
	use generic-contact
	contactgroups			supergroup
        }

#Hi David, look at my code?
define contact{
        contact_name                            dbrosseau
	use generic-contact
	contactgroups			+GroupeADavid
	_Superpropriete			PROPRIETEDELAMORT
	_SNMPPASS			+SECRETADAVID
	_supertoto			+prout
}

#It's me :)
define contact{
        contact_name                            jgabes
	email					naparuba@gmail.com
	use generic-contact
}

#We create some contact groups
define contactgroup{
	contactgroup_name	autreadmins
	alias	alias
	members	jgabes
#	contactgroup_members	contactgroups ;, admins
   	}

define contactgroup{
	contactgroup_name	admins
	alias	admins
	members	superadmin,dbrosseau
	contactgroup_members	autreadmins
   	}



###############################################################################
###############################################################################
#
# HOST TEMPLATES
#
###############################################################################
###############################################################################

# Generic host definition template - This is NOT a real host, just a template!
define host{
	name				generic-host
	alias				generic-host
	check_command			check_host!$USER2$
	max_check_attempts			2
	check_interval			1
	active_checks_enabled		1
	check_period			24x7
	event_handler_enabled		0
	flap_detection_enabled		1
	process_perf_data			1
	retain_status_information		1
	retain_nonstatus_information	1
#	contact_groups			admins
	notification_interval		1
	notification_period		24x7
	notification_options		d,u,r,f
	notifications_enabled		1
	register				0
	event_handler			super_event_kill_everyone!DIE
#	critical_is_warning		1
#	hot_period		24x7
#	escalations			 ToLevel2
	#poller_tag			 DMZ
}


define host{
	name				generic-windows
	use				generic-host
	alias				generic-windows
#	check_command			check-windows-alive
	event_handler_enabled		1
	flap_detection_enabled		1
	process_perf_data			1
	retain_status_information		1
	retain_nonstatus_information	1
	register				0
}



define host{
	name				linux-server	; The name of this host template
	use				generic-host	; This template inherits other values from the generic-host template
	check_period			24x7		; By default, Linux hosts are checked round the clock
	check_interval			5		; Actively check the host every 5 minutes
	retry_interval			5		; Schedule host check retries at 1 minute intervals
	max_check_attempts		2		; Check each Linux host 10 times (max)
#        check_command           	check_host ; Default command to check Linux hosts
	notification_period		24x7
							; Note that the notification_period variable is being overridden from
							; the value that is inherited from the generic-host template!
	notification_interval		1		; Resend notifications every 2 hours
	notification_options		d,u,r		; Only send notifications for specific host states
#	contact_groups			admins		; Notifications get sent to the admins by default
	register			0		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
	hostgroups		ServeursRedHat
	_dellsuck		+butdontsay them
	}



# Windows host definition template - This is NOT a real host, just a template!

define host{
	name			windows-server	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, Windows servers are monitored round the clock
	check_interval		1		; Actively check the server every 5 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	2		; Check each server 10 times (max)
#	check_command		check_host	; Default command to check if servers are "alive"
	notification_period	24x7		; Send notification out at any time - day or night
	notification_interval	1		; Resend notifications every 5 minutes
	notification_options	d,r		; Only send notifications for specific host states
#	contact_groups		admins		; Notifications get sent to the admins by default
	hostgroups		windows-servers ; Host groups that Windows servers should be a member of
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
	}


# We define a generic printer template that can be used for most printers we monitor

define host{
	name			generic-printer	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, printers are monitored round the clock
	check_interval		1		; Actively check the printer every 5 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	2		; Check each printer 10 times (max)
	check_command		check_host	; Default command to check if printers are "alive"
	notification_period	workhours		; Printers are only used during the workday
	notification_interval	30		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
	}


# Define a template for switches that we can reuse
define host{
	name			generic-switch	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, switches are monitored round the clock
	check_interval		1		; Switches are checked every 5 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	10		; Check each switch 10 times (max)
	check_command		check_host	; Default command to check if routers are "alive"
	notification_period	24x7		; Send notifications at any time
	notification_interval	30		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
	}




define host{
        use                     linux-server
	contact_groups		admins
        host_name               localhost
        alias                   localhost
        address                 localhost
	check_interval		1
	parents			dc01
        }

define host{
        use                     linux-server
        contact_groups          admins
        host_name               srv-1
        alias                   srv-1
        address                 localhost
        check_interval          1
        parents                 dc01
        }



define host{
        use                     windows-server
	contacts		jgabes
#	contact_groups          admins
        host_name               dc01
        alias                   dc01
        address                 dc01
#	hostgroups		DCserveurs
	realm All
        }


#A little host group. Host groups are important if you want to keep managable your conf ;)
define hostgroup{
        hostgroup_name  linux-servers ; The name of the hostgroup
        alias           Linux Servers ; Long name of the group
        members         localhost,dc01     ; Comma separated list of hosts that belong to this group
	realm Europe
        }




###############################################################################
###############################################################################
#
# SERVICE TEMPLATES
#
###############################################################################
###############################################################################

# Generic service definition template - This is NOT a real service, just a template!
define service{
        name                            generic-service 	; The 'name' of this service template
        active_checks_enabled           1       		; Active service checks are enabled
        passive_checks_enabled          1    		   	; Passive service checks are enabled/accepted
        parallelize_check               1       		; Active service checks should be parallelized (disabling this can lead to major performance problems)
        obsess_over_service             1       		; We should obsess over this service (if necessary)
        check_freshness                 1       		; Default is to NOT check service 'freshness'
	freshness_threshold		3600
        notifications_enabled           1       		; Service notifications are enabled
        event_handler_enabled           0       		; Service event handler is enabled
	event_handler			super_event_kill_everyone!DIE
        flap_detection_enabled          1       		; Flap detection is enabled
        failure_prediction_enabled      1       		; Failure prediction is enabled
        process_perf_data               1       		; Process performance data
        retain_status_information       1       		; Retain status information across program restarts
        retain_nonstatus_information    1       		; Retain non-status information across program restarts
        is_volatile                     0       		; The service is not volatile
        check_period                    24x7			; The service can be checked at any time of the day
        max_check_attempts              2			; Re-check the service up to 3 times in order to determine its final (hard) state
        check_interval           5			; Check the service every 10 minutes under normal conditions
        retry_interval            5			; Re-check the service every two minutes until a hard state can be determined
        contact_groups                  admins			; Notifications get sent out to everyone in the 'admins' group
	notification_options		w,u,c,r			; Send notifications about warning, unknown, critical, and recovery events
        notification_interval           1			; Re-notify about service problems every hour
	notification_period             24x7
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
	_httpstink			 NO
#	stalking_options		 w,c

	#Shinken specific
	resultmodulations		 critical_is_warning
#	escalations			 ToLevel2
        }



#This one is a real one
define service{
	name				local-service 		; The name of this service template
	use				generic-service		; Inherit default values from the generic-service definition
        max_check_attempts              1			; Re-check the service up to 4 times in order to determine its final (hard) state
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
	hostgroup_name			in-existant
	}



define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
#	hostgroup_name			linux-servers
        service_description             Root Partition
	check_command			check_local_disk!$USER2$
        }


###Service groups are less important than host group, but can be useful
define servicegroup{
       servicegroup_name	LocalServices
       alias			Local service
       members			localhost,Root Partition
       }



# Define escalation with the OLD school way.
#Beter use the simple "escalation" way! (shinken-specific.cfg)

define serviceescalation{
       host_name	localhost
       hostgroup_name	windows-servers
       service_description	Root Partition
       contacts			dbrosseau
       contact_groups		admins
       first_notification	2
       last_notification	5
       notification_interval	1
       escalation_period	24x7
       escalation_options	w,u,c,r
       }

define hostescalation{
       host_name	dc01
       hostgroup_name	windows-servers
       contacts			dbrosseau
#       contact_groups		admins
       first_notification	2
       last_notification	6
       notification_interval	1
       escalation_period	24x7
       escalation_options	u,d,r
       }



#### Timeperiods part

define timeperiod{
	timeperiod_name			24x7
	alias				24_Hours_A_Day,_7_Days_A_Week
	sunday				00:00-24:00
	monday				00:00-24:00
	tuesday				00:00-24:00
	wednesday				00:00-24:00
	thursday				00:00-24:00
	friday				00:00-24:00
	saturday				00:00-24:00
#	exclude                		workhours
}


# 'workhours' timeperiod definition
define timeperiod{
	timeperiod_name	workhours
	alias		Normal Work Hours
	monday		09:00-17:00
	tuesday		09:00-17:00
	wednesday	09:00-17:00
	thursday	09:00-17:00
	friday		09:00-17:00
	#exclude		24x7
	}


# 'none' timeperiod definition
define timeperiod{
	timeperiod_name	none
	alias		No Time Is A Good Time
	}


# Some U.S. holidays
# Note: The timeranges for each holiday are meant to *exclude* the holidays from being
# treated as a valid time for notifications, etc.  You probably don't want your pager 
# going off on New Year's.  Although you're employer might... :-)
define timeperiod{
	name			us-holidays
        timeperiod_name         us-holidays
        alias                   U.S. Holidays

        january 1               00:00-00:00     ; New Years
        monday -1 may           00:00-00:00     ; Memorial Day (last Monday in May)
        july 4                  00:00-00:00     ; Independence Day
        monday 1 september      00:00-00:00     ; Labor Day (first Monday in September)
        thursday -1 november    00:00-00:00     ; Thanksgiving (last Thursday in November)
        december 25             00:00-00:00     ; Christmas
        }


# This defines a modified "24x7" timeperiod that covers every day of the
# year, except for U.S. holidays (defined in the timeperiod above).
define timeperiod{
        timeperiod_name 24x7_sans_holidays
        alias           24x7 Sans Holidays

	use		us-holidays		; Get holiday exceptions from other timeperiod

        sunday          00:00-24:00
        monday          00:00-24:00
        tuesday         00:00-24:00
        wednesday       00:00-24:00
        thursday        00:00-24:00
        friday          00:00-24:00
        saturday        00:00-24:00
        }


#Dependancies

#define servicedependency{
#       host_name			dc01
#       service_description		     ActiveDirectory
#       dependent_host_name		     	     dc07
#       dependent_service_description		     ActiveDirectory
#       execution_failure_criteria		     o
#       notification_failure_criteria		     w,u
#       dependency_period			     24x7
#       }

#define hostdependency{
#       host_name                        dc01
#       dependent_host_name                           localhost
#       execution_failure_criteria                    o
#       notification_failure_criteria                 u
#       dependency_period                             24x7
#       }


