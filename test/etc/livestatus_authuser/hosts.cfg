define host{
  check_interval                 1
  check_period                   24x7
  event_handler_enabled          1
  failure_prediction_enabled     1
  flap_detection_enabled         1
  max_check_attempts             3
  name                           generic-host
  notification_interval          1
  notification_options           d,u,r,f,s
  notification_period            24x7
  notifications_enabled          1
  process_perf_data              1
  register                       0
  retain_nonstatus_information   1
  retain_status_information      1
  retry_interval                 1
  check_command                  check-host-alive
  address                        127.0.0.1
}


define service{
  active_checks_enabled          1
  check_freshness                0
  check_interval                 1
  check_period                   24x7
  event_handler_enabled          1
  failure_prediction_enabled     1
  flap_detection_enabled         1
  is_volatile                    0
  max_check_attempts             2
  name                           generic-service
  notification_interval          1
  notification_options           w,u,c,r,f,s
  notification_period            24x7
  notifications_enabled          1
  obsess_over_service            1
  parallelize_check              1
  passive_checks_enabled         1
  process_perf_data              1
  register                       0
  retain_nonstatus_information   1
  retain_status_information      1
  retry_interval                 1
  check_command                  check_service!ok
}


define contact {
  contact_name                   c0
}
define contact {
  contact_name                   c1
}
define contact {
  contact_name                   c2
}
define contactgroup {
  contactgroup_name              cg0
  members                        c0,c1
}
define contactgroup {
  contactgroup_name              cg1
  members                        c0
}
define contactgroup {
  contactgroup_name              cg2
  members                        c1
}
define contactgroup {
  contactgroup_name              cg3
  members                        c2
}


define host{
  host_name                      test_host_0
  use                            generic-host
  contact_groups                 cg0
}
define service{
  host_name                      test_host_0
  service_description            test_ok_0
  use                            generic-service
  contact_groups                 cg0
}
define service{
  host_name                      test_host_0
  service_description            test_ok_1
  use                            generic-service
  contact_groups                 cg1
}
define service{
  host_name                      test_host_0
  service_description            test_ok_2
  use                            generic-service
  contact_groups                 cg2
}
define service{
  # service_authorization
  # loose: c0 sees this service (sees all, because c0 is also host-contact
  # strict: c0 sees this service not, c3 does
  host_name                      test_host_0
  service_description            test_ok_3
  use                            generic-service
  contact_groups                 cg3
}



define host{
  host_name                      test_host_1
  contact_groups                 cg0
  use                            generic-host
}
define service{
  host_name                      test_host_1
  service_description            test_ok_0
  use                            generic-service
  contact_groups                 cg2
}
define service{
  host_name                      test_host_1
  service_description            test_ok_1
  use                            generic-service
}
define service{
  host_name                      test_host_1
  service_description            test_ok_2
  use                            generic-service
}
define service{
  host_name                      test_host_1
  service_description            test_ok_3
  use                            generic-service
}



define host{
  host_name                      test_host_2
  contact_groups                 cg3
  use                            generic-host
}
define service{
  host_name                      test_host_2
  service_description            test_ok_0
  use                            generic-service
}
define service{
  host_name                      test_host_2
  service_description            test_ok_1
  use                            generic-service
}
define service{
  host_name                      test_host_2
  service_description            test_ok_2
  use                            generic-service
}
define service{
  host_name                      test_host_2
  service_description            test_ok_3
  use                            generic-service
}



define host{
  host_name                      test_host_3
  contact_groups                 cg3
  use                            generic-host
}
define service{
  host_name                      test_host_3
  service_description            test_ok_0
  use                            generic-service
}
define service{
  host_name                      test_host_3
  service_description            test_ok_1
  use                            generic-service
}
define service{
  host_name                      test_host_3
  service_description            test_ok_2
  use                            generic-service
}
define service{
  host_name                      test_host_3
  service_description            test_ok_3
  use                            generic-service
}

define hostgroup {
  hostgroup_name                 test_hostgroup_0
  members                        test_host_0,test_host_1,test_host_2,test_3
  # group_authorization
  # strict: cg3 sees test_host_2/3
  # loose: cg3 sees test_host_0..3
}
